apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ozone-
spec:
  onExit: notify
  entrypoint: run-all-tests
  arguments:
    parameters:
      - name: org
        value: apache
      - name: repo
        value: hadoop
      - name: branch
        value: trunk
      - name: notify
        value: "false"
      - name: update-github-status
        value: "false"
  templates:
    - name: run-all-tests
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: build
            dependencies: ["checkout"]
            template: build
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: checkstyle
            dependencies: ["checkout"]
            template: checkstyle
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: unit
            dependencies: ["checkout"]
            template: unit
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: integration
            dependencies: ["checkout"]
            template: integration
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: findbugs
            dependencies: ["checkout"]
            template: findbugs
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: author
            dependencies: ["checkout"]
            template: author
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: acceptance
            dependencies: ["checkout"]
            template: acceptance
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
    - name: run-unit
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: unit
            dependencies: ["checkout"]
            template: unit
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
    - name: run-author
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: author
            dependencies: ["checkout"]
            template: author
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"  
    - name: run-checkstyle
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: checkstyle
            dependencies: ["checkout"]
            template: checkstyle
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
    - name: run-integration
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: integration
            dependencies: ["checkout"]
            template: integration
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
    - name: run-acceptance
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: acceptance
            dependencies: ["checkout"]
            template: acceptance
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
    - name: checkout
      inputs:
        artifacts:
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      outputs:
        artifacts:
          - name: source
            path: /tmp/src
          - name: log
            path: /tmp/log
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - bash
          - -x
          - -c
          - git clone --depth=1 https://github.com/{{workflow.parameters.org}}/{{workflow.parameters.repo}}.git --branch {{workflow.parameters.branch}} /tmp/src && git -C  /tmp/src log -1 > $(dirname $OUTPUT_DIR)/HEAD.txt && rm -rf  /tmp/src/hadoop-tools /tmp/src/hadoop-yarn-project /tmp/src/hadoop-mapreduce-project /tmp/src/hadoop-submarine /tmp/src/hadoop-common-project/hadoop-common/dev-support
        env:
          - name: TEST_TYPE
            value: checkout
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "false"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret

    - name: build
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      outputs:
        artifacts:
          - name: log
            path: /tmp/log
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - mvn
          - clean
          - install
          - "-f"
          - pom.ozone.xml
          - "-DskipTests"
        env:
          - name: TEST_TYPE
            value: build
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 2048Mi
            cpu: 1

    - name: unit
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - bash
          - "-x"
          - "-c"
          - mvn install -B -f pom.ozone.xml -DskipTests; hadoop-ozone/dev-support/checks/unit.sh; RET=$?; /tools/scripts/collect-junit-failed.sh /workdir $OUTPUT_DIR; exit $RET
        env:
          - name: TEST_TYPE
            value: unit
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 10000Mi
            cpu: 2

    - name: integration
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - bash
          - "-x"
          - "-c"
          - hadoop-ozone/dev-support/checks/integration.sh; RET=$?; /tools/scripts/collect-junit-failed.sh /workdir $OUTPUT_DIR; exit $RET
        env:
          - name: TEST_TYPE
            value: integration
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 10000Mi
            cpu: 2

    - name: checkstyle
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args: ["hadoop-ozone/dev-support/checks/checkstyle.sh"]
        env:
          - name: TEST_TYPE
            value: checkstyle
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 2048Mi
            cpu: 500m
    - name: author
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args: ["hadoop-ozone/dev-support/checks/author.sh"]
        env:
          - name: TEST_TYPE
            value: author
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
    - name: findbugs
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args: ["hadoop-ozone/dev-support/checks/findbugs.sh"]
        env:
          - name: TEST_TYPE
            value: findbugs
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 2048Mi
            cpu: 500m

    - name: acceptance
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        args:
          - bash
          - "-x"
          - "-c"
          - mvn install -B -f pom.ozone.xml -DskipTests; hadoop-ozone/dev-support/checks/acceptance.sh; RET=$?; cp -r hadoop-ozone/dist/target/ozone-*/compose/result $OUTPUT_DIR/smokeresult; exit $RET
        command: ["/tools/scripts/test-executor.sh"]
        env:
          - name: TEST_TYPE
            value: acceptance
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
          - name: DOCKER_HOST
            value: 127.0.0.1:2375
        resources:
          requests:
            memory: 2024Mi
            cpu: 2
      sidecars:
        - name: dind
          image: docker:17.10-dind # Docker already provides an image for running a Docker daemon
          securityContext:
            privileged: true # the Docker daemon can only run in a privileged container
          # mirrorVolumeMounts will mount the same volumes specified in the main container
          # to the sidecar (including artifacts), at the same mountPaths. This enables
          # dind daemon to (partially) see the same filesystem as the main container in
          # order to use features such as docker volume binding.
          mirrorVolumeMounts: true
    - name: notify
      inputs:
        artifacts:
          - name: report-source
            path: /src
            git:
              repo: "https://github.com/elek/ozone-ci.git"
              revision: "master"
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      script:
        image: elek/mailsender-go
        imagePullPolicy: Always
        command: ["bash", "-x"]
        source: |
          if [[ "$NOTIFY" == "true" ]]; then
            JOB_NAME=$(cut -d '-' -f 1 <<< "$WORKFLOW_NAME")
            /tools/scripts/report.sh /src/$JOB_NAME/$WORKFLOW_NAME | tee /tmp/mail.txt
            /go/bin/mailsend-go -sub "[ozone-$JOB_NAME] Build $WORKFLOW_NAME is $WORKFLOW_STATUS" \
              -smtp os.anzix.net \
              -port 465 \
              auth -user ci@anzix.net -from ci@anzix.net \
              -to ozone-dev@cloudera.com \
              body -file /tmp/mail.txt
          fi
        env:
          - name: SMTP_USER_PASS
            valueFrom:
              secretKeyRef:
                name: smtp-pass
                key: secret
          - name: WORKFLOW_STATUS
            value: "{{workflow.status}}"
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: NOTIFY
            value: "{{workflow.parameters.notify}}"
