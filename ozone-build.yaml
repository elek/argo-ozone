apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ozone-
spec:
  onExit: notify
  entrypoint: run-all
  arguments:
    parameters:
      - name: org
        value: apache
      - name: repo
        value: hadoop
      - name: branch
        value: trunk
      - name: notify
        value: "false"
      - name: update-github-status
        value: "false"
      - name: argo-ozone-branch
        value: "master"
      - name: artifact-repo
        value: https://github.com/elek/ozone-ci-q4
      - name: build-image
        value: elek/ozone-build:20190925-1
      - name: selected-test #works only together with setting entrypoint to run-ona
        value: all
  volumes:
    - name: git
      secret:
        secretName: git
  templates:
    - name: run-all
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: build
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: build.sh
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: checkstyle
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: checkstyle.sh
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: unit
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: unit.sh
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: integration
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: integration.sh -Dsurefire.excludesFile=/tools/ozone-bad-unit-tests
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: author
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: author.sh
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: findbugs
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: findbugs.sh
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: rat
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: rat.sh
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: acceptance
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: acceptance.sh
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
    - name: run-one
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: run-test
            dependencies: ["checkout"]
            template: execute-step
            arguments:
              parameters:
                - name: test
                  value: "{{workflow.parameters.selected-test}}"
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
    - name: checkout
      inputs:
        artifacts:
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "{{workflow.parameters.argo-ozone-branch}}"
      outputs:
        artifacts:
          - name: source
            path: /tmp/src
          - name: log
            path: /tmp/log
      container:
        image: "{{workflow.parameters.build-image}}"
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - bash
          - -x
          - -c
          - git clone --depth=1 https://github.com/{{workflow.parameters.org}}/{{workflow.parameters.repo}}.git --branch {{workflow.parameters.branch}} /tmp/src && git -C  /tmp/src log -1 > $(dirname $OUTPUT_DIR)/HEAD.txt && rm -rf  /tmp/src/hadoop-tools /tmp/src/hadoop-yarn-project /tmp/src/hadoop-mapreduce-project /tmp/src/hadoop-submarine /tmp/src/hadoop-common-project /tmp/src/hadoop-hdfs-project hadoop-dist hadoop-project-dist hadoop-project hadoop-cloud-storage-project hadoop-build-tools
        env:
          - name: TEST_TYPE
            value: checkout
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "false"
          - name: BUILD_ARTIFACT_REPO
            value: "{{workflow.parameters.artifact-repo}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        volumeMounts:
          - name: git
            mountPath: /home/user/.gitconfig
            subPath: .gitconfig
          - name: git
            mountPath: /home/user/.git-credentials
            subPath: .git-credentials

    - name: execute-step
      inputs:
        parameters:
          - name: test
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "{{workflow.parameters.argo-ozone-branch}}"
      outputs:
        artifacts:
          - name: log
            path: /tmp/log
      container:
        image: "{{workflow.parameters.build-image}}"
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - /workdir/hadoop-ozone/dev-support/checks/{{inputs.parameters.test}}
        env:
          - name: DOCKER_HOST
            value: tcp://0.0.0.0:2375
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: BUILD_ARTIFACT_REPO
            value: "{{workflow.parameters.artifact-repo}}"
#          - name: APPLY_PATCH
#            value: https://github.com/elek/hadoop/commit/e8b2cd7a87f8bf42ced0ab459870be5ba880ea17.patch?short_path=cbc3fc8#diff-cbc3fc862e413c87f6e53b751a43e33d
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 4000Mi
            cpu: 2
        volumeMounts:
          - name: git
            mountPath: /home/user/.gitconfig
            subPath: .gitconfig
          - name: git
            mountPath: /home/user/.git-credentials
            subPath: .git-credentials
      sidecars:
        - name: dind
          image: docker:17.10-dind # Docker already provides an image for running a Docker daemon
          securityContext:
            privileged: true # the Docker daemon can only run in a privileged container
          # mirrorVolumeMounts will mount the same volumes specified in the main container
          # to the sidecar (including artifacts), at the same mountPaths. This enables
          # dind daemon to (partially) see the same filesystem as the main container in
          # order to use features such as docker volume binding.
          mirrorVolumeMounts: true
    - name: notify
      inputs:
        artifacts:
          - name: report-source
            path: /src
            git:
              repo: "{{workflow.parameters.artifact-repo}}"
              revision: "master"
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "{{workflow.parameters.argo-ozone-branch}}"
      script:
        image: "{{workflow.parameters.build-image}}"
        imagePullPolicy: Always
        command: ["bash", "-x"]
        source: |

          export LOG_DIR=/tmp/log
          git clone "$BUILD_ARTIFACT_REPO" "$LOG_DIR"

          JOB_NAME=$(cut -d '-' -f 1 <<< "$WORKFLOW_NAME")
          /tools/scripts/report.sh $LOG_DIR/$JOB_NAME/$WORKFLOW_NAME | tee "$LOG_DIR/$JOB_NAME/$WORKFLOW_NAME/README.md"

          source /tools/scripts/test-executor-lib.sh
          git_commit_result

          if [[ "$NOTIFY" == "true" ]]; then
            mailsend-go -sub "[ozone-$JOB_NAME] Build $WORKFLOW_NAME is $WORKFLOW_STATUS" \
              -smtp smtp.l42scl.hortonworks.com \
              -port 25 \
              -from no_reply@cloudera.com \
              -to ozone-dev@cloudera.com \
              body -file "$LOG_DIR/$JOB_NAME/$WORKFLOW_NAME/README.md"
          fi
        env:
          - name: WORKFLOW_STATUS
            value: "{{workflow.status}}"
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: BUILD_ARTIFACT_REPO
            value: "{{workflow.parameters.artifact-repo}}"
          - name: NOTIFY
            value: "{{workflow.parameters.notify}}"
        volumeMounts:
          - name: git
            mountPath: /home/user/.gitconfig
            subPath: .gitconfig
          - name: git
            mountPath: /home/user/.git-credentials
            subPath: .git-credentials
